#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

/**
 *
 **/
#define LINELEN 80
#define EXTRACHARS 2

struct counts
{
        unsigned tabs;
        unsigned spaces;
        unsigned punct;
        unsigned lower;
        unsigned upper;
        unsigned digits;
};
typedef enum { FALSE, TRUE } BOOLEAN;

int main(void)
{
        char line[LINELEN + EXTRACHARS];
        BOOLEAN success = FALSE;
        struct counts counts;
        unsigned char_count, length;
        memset(&counts, 0, sizeof(counts));
        while(!success)
        {
                printf("Please enter a line for me to process: ");
                fgets(line, LINELEN + EXTRACHARS, stdin);
                if(line[strlen(line)-1] != '\n')
                {
                        printf("Error: line is too long. "
                                "Please try again.\n");
                        continue;
                }
                success = TRUE;
                line[strlen(line)-1]=0;
        }
        length = strlen(line);
        for(char_count = 0; char_count < strlen(line); ++char_count)
        {
                if(line[char_count] == '\t')
                {
                        ++counts.tabs;
                }
                if(line[char_count] == ' ')
                {
                        ++counts.spaces;
                }
                if(ispunct(line[char_count]))
                {
                        ++counts.punct;
                }
                if(islower(line[char_count]))
                {
                        ++counts.lower;
                }
                if(isupper(line[char_count]))
                {
                        ++counts.upper;
                }
                if(isdigit(line[char_count]))
                {
                        ++counts.digits;
                }
        }
        printf("there were %u tabs, %u spaces, "
                "%u punctuation marks, %u lower case characters, \n"
                "%u upper case characters and %u digits in the string.\n", 
                counts.tabs, counts.spaces, counts.punct,
                counts.lower, counts.upper, counts.digits);
        return EXIT_SUCCESS;
}


